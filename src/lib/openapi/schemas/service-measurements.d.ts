/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/measurement": {
    /** Get measurements by type */
    get: {
      parameters: {
        query: {
          type: string;
          sort?: "asc" | "desc";
          offset?: number;
          limit?: number;
        };
      };
      responses: {
        /** @description Measurements retrieved successfully */
        200: {
          content: {
            "application/json": {
              success?: boolean;
              measurements?: Record<string, never>[];
            };
          };
        };
        /** @description Validation error */
        400: {
          content: never;
        };
      };
    };
    /** Update a measurement */
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** @description Timestamp of the measurement */
            timestamp?: number;
            /** @description Type of measurement */
            type?: string;
            /** @description Additional metadata for the measurement */
            meta?: Record<string, never>;
          };
        };
      };
      responses: {
        /** @description Measurement updated successfully */
        200: {
          content: {
            "application/json": {
              success?: boolean;
              measurement?: Record<string, never>;
            };
          };
        };
        /** @description Validation error */
        400: {
          content: never;
        };
        /** @description Measurement not found or not authorized */
        404: {
          content: never;
        };
      };
    };
    /** Add a new measurement */
    post: {
      requestBody: {
        content: {
          "application/json": {
            /** @description Timestamp of the measurement (defaults to current time) */
            timestamp?: number;
            /** @description Type of measurement */
            type: string;
            /** @description Value of the measurement */
            value: number;
            /** @description Additional metadata for the measurement */
            meta?: Record<string, never>;
          };
        };
      };
      responses: {
        /** @description Measurement added successfully */
        200: {
          content: {
            "application/json": {
              success?: boolean;
              measurement?: Record<string, never>;
            };
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description User not found */
        409: {
          content: never;
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export type components = Record<string, never>;

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
