/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/login": {
    /** Login using Telegram credentials */
    post: {
      requestBody: {
        content: {
          "application/json": {
            /** @example 123456789 */
            id: number;
            /** @example John */
            firstName: string;
            /** @example Doe */
            lastName: string;
            /** @example johndoe */
            username: string;
            /** @example https://example.com/photo.jpg */
            photoUrl: string;
            /** @example 1620000000 */
            authDate: number;
            /** @example abcdef123456 */
            hash: string;
          };
        };
      };
      responses: {
        /** @description Successful login */
        200: {
          content: {
            "application/json": {
              id?: number;
              firstName?: string;
              lastName?: string;
              username?: string;
              photoUrl?: string;
              authDate?: number;
              hash?: string;
              timestamp?: number;
              meta?: Record<string, never>;
            };
          };
        };
        /** @description Invalid user hash */
        403: {
          content: {
            "application/json": {
              /** @example Invalid user hash! */
              message?: string;
            };
          };
        };
      };
    };
  };
  "/": {
    /** Get user details */
    get: {
      responses: {
        /** @description Successful operation */
        200: {
          content: {
            "application/json": {
              _id?: string;
              id?: number;
              firstName?: string;
              lastName?: string;
              username?: string;
              photoUrl?: string;
              authDate?: number;
              hash?: string;
              timestamp?: number;
              meta?: Record<string, never>;
            };
          };
        };
        /** @description User not exists */
        409: {
          content: {
            "application/json": {
              /** @example User not exists! */
              message?: string;
            };
          };
        };
      };
    };
  };
  "/refresh": {
    /** Refresh user tokens */
    get: {
      responses: {
        /** @description Successful operation */
        200: {
          content: {
            "application/json": {
              _id?: string;
              id?: number;
              firstName?: string;
              lastName?: string;
              username?: string;
              photoUrl?: string;
              authDate?: number;
              hash?: string;
              timestamp?: number;
              meta?: Record<string, never>;
            };
          };
        };
        /** @description Refresh token not found or user not found */
        404: {
          content: {
            "application/json": {
              /** @example Refresh token not found! */
              message?: string;
            };
          };
        };
      };
    };
  };
  "/update-meta": {
    /** Update user meta information */
    put: {
      requestBody: {
        content: {
          "application/json": {
            meta: {
              [key: string]: unknown;
            };
          };
        };
      };
      responses: {
        /** @description Successful operation */
        200: {
          content: {
            "application/json": {
              _id?: string;
              id?: number;
              firstName?: string;
              lastName?: string;
              username?: string;
              photoUrl?: string;
              authDate?: number;
              hash?: string;
              timestamp?: number;
              meta?: Record<string, never>;
            };
          };
        };
        /** @description User not exists */
        409: {
          content: {
            "application/json": {
              /** @example User not exists! */
              message?: string;
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export type components = Record<string, never>;

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
